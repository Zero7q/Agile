@model Agile.Models.ViewModels.SysMenuViewModel
@{
    ViewData["Title"] = "List";
    Layout = "~/Views/Shared/_ListLayout.cshtml";
}

<div class="layui-inline">
    <label class="layui-form-label">@Html.DisplayNameFor(s => s.Name)：</label>
    <div class="layui-input-inline">
        @Html.TextBox("name", Model.Name, new { @class = "layui-input", @placeholder = $"请输入{Html.DisplayNameFor(s => s.Name)}" })
    </div>
</div>

<div class="layui-inline">
    <label class="layui-form-label">@Html.DisplayNameFor(s => s.Url)：</label>
    <div class="layui-input-inline">
        @Html.TextBox("url", Model.Url, new { @class = "layui-input", @placeholder = $"请输入{Html.DisplayNameFor(s => s.Url)}" })
    </div>
</div>

@section Scripts{
    <script>
        layui.use(['layer', 'form', 'admin', 'treeTable', 'util', 'xmSelect'], function () {
            var $ = layui.jquery;
            var layer = layui.layer;
            var form = layui.form;
            var admin = layui.admin;
            var treeTable = layui.treeTable;
            var util = layui.util;
            var xmSelect = layui.xmSelect;
            var tbDataList = [];

            // 渲染表格
            var insTb = treeTable.render({
                elem: '#agileTable',
                tree: {
                    iconIndex: 1,
                    idName: 'id',
                    pidName: 'parentId',
                    isPidData: true
                },
                toolbar:'#agileToolbar',
                cellMinWidth: 100,
                cols: [
                    { type: 'numbers' },
                    { field: 'name', title: '菜单名称', sort: true, width: 380},
                    { title: '菜单图标', templet: '<p><i class="{{d.icon}}"></i></p>', align: 'center', width: 120 },
                    { field: 'url', title: '菜单地址', sort: true }
                ],
                reqData: function (data, callback) {
                    $.get('/admin/menu/gettreedata', function (res) {
                        tbDataList = res.data ? res.data : [];
                        callback(res.data);
                    });
                }
            });

            /* 表格搜索 */
            form.on('submit(agileTbSearch)', function (data) {
                doTbSearch(data.field, 'id');
                return false;
            });

            /* 搜索表格数据 */
            function doTbSearch(field, idName) {
                var ids = [], isClear = true;
                for (var i = 0; i < tbDataList.length; i++) {
                    var item = tbDataList[i], flag = true;
                    for (var f in field) {
                        if (!field.hasOwnProperty(f)) continue;
                        if (!field[f]) continue;
                        isClear = false;
                        if (!item[f] || item[f].indexOf(field[f]) === -1) {
                            flag = false;
                            break;
                        }
                    }
                    if (flag) ids.push(item[idName]);
                }
                if (isClear) {
                    insTb.clearFilter();
                } else {
                    insTb.filterData(ids);
                }
            }

            /* 添加 */
            $('#authoritiesAddBtn').click(function () {
                showEditModel();
            });

            /* 显示表单弹窗 */
            function showEditModel(mData) {
                admin.open({
                    type: 2,
                    area: ['600px', '600px'],
                    title: (mData ? '修改' : '添加') + '权限',
                    content:'/admin/menu/add',
                    success: function (layero, dIndex) {
                        // 回显表单数据
                        form.val('authoritiesEditForm', mData);
                        // 表单提交事件
                        form.on('submit(authoritiesEditSubmit)', function (data) {
                            data.field.parentId = insXmSel.getValue('valueStr');
                            var loadIndex = layer.load(2);
                            $.get(mData ? '../../json/ok.json' : '../../json/ok.json', data.field, function (res) {
                                layer.close(loadIndex);
                                if (res.code === 200) {
                                    layer.close(dIndex);
                                    layer.msg(res.msg, { icon: 1 });
                                    insTb.refresh();
                                } else {
                                    layer.msg(res.msg, { icon: 2 });
                                }
                            }, 'json');
                            return false;
                        });
                        // 渲染下拉树
                        var insXmSel = xmSelect.render({
                            el: '#authoritiesEditParentSel',
                            height: '250px',
                            data: insTb.options.data,
                            initValue: mData ? [mData.parentId] : [],
                            model: { label: { type: 'text' } },
                            prop: {
                                name: 'authorityName',
                                value: 'authorityId'
                            },
                            radio: true,
                            clickClose: true,
                            tree: {
                                show: true,
                                indent: 15,
                                strict: false,
                                expandedKeys: true
                            }
                        });
                        // 弹窗不出现滚动条
                        $(layero).children('.layui-layer-content').css('overflow', 'visible');
                    }
                });
            }
        });
    </script>
}
